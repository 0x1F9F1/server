Checking direct reads
Checking direct writes
Checking rocksdb_flush_log_at_trx_commit
Validate flush_log settings when direct writes is enabled
set global rocksdb_flush_log_at_trx_commit=0;
set global rocksdb_flush_log_at_trx_commit=1;
ERROR 42000: Variable 'rocksdb_flush_log_at_trx_commit' can't be set to the value of '1'
set global rocksdb_flush_log_at_trx_commit=2;
ERROR 42000: Variable 'rocksdb_flush_log_at_trx_commit' can't be set to the value of '2'
call mtr.add_suppression("rocksdb");
call mtr.add_suppression("Aborting");
# This shows that RocksDB plugin is loaded:
select plugin_name, plugin_type from information_schema.plugins where plugin_name='RocksDB';
plugin_name	plugin_type
ROCKSDB	STORAGE ENGINE
# Check that ROCKSDB plugin is not loaded:
select plugin_name, plugin_type from information_schema.plugins where plugin_name='RocksDB';
plugin_name	plugin_type
# Check that MyRocks has printed an error message into server error log:
FOUND 1 /enable both use_direct_reads/ in mysqld.1.err
# Now, restart the server back with regular settings
select plugin_name, plugin_type from information_schema.plugins where plugin_name='RocksDB';
plugin_name	plugin_type
ROCKSDB	STORAGE ENGINE
#
# Now, repeat the same with another set of invalid arguments
#
# Check that ROCKSDB plugin is not loaded:
select plugin_name, plugin_type from information_schema.plugins where plugin_name='RocksDB';
plugin_name	plugin_type
FOUND 1 /enable both use_direct_io_for_flush_and_compaction/ in mysqld.1.err
# Now, restart the server back with regular settings
select plugin_name, plugin_type from information_schema.plugins where plugin_name='RocksDB';
plugin_name	plugin_type
ROCKSDB	STORAGE ENGINE
