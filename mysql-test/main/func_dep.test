SET SQL_MODE='only_full_group_by';

CREATE TABLE t1(a INT, b INT, c INT);
CREATE TABLE t2 (x INT, y BLOB, z INT);

INSERT INTO t1 VALUES (1,2,1),(2,2,2),(2,4,1);
INSERT INTO t2 VALUES (2,'x',1),(1,'x ',1),(2,'x',0);

--echo #
--echo # Simple cases with no GROUP BY
--echo #

SELECT 1 GROUP BY 1;

SELECT 1 FROM t1 GROUP by t1.a;

SELECT 1 FROM t1;

SELECT a FROM t1;

SELECT a+1 FROM t1;

SELECT 1 FROM t1 HAVING 1;

SELECT 1 FROM t1 HAVING 1 > 0;

SELECT 1 FROM t1 WHERE a > 1 HAVING 1;

SELECT 1 FROM t1 GROUP BY a HAVING a > 1;

SELECT 1 FROM t1 GROUP BY 1 HAVING 1;

SELECT 1 HAVING 1;

SELECT t1.a IN (1, 'y') FROM t1;

SELECT t1.a IN (1, 'y') FROM t1 GROUP BY t1.a;

SELECT t1.a FROM t1
WHERE t1.a IN (a, 'y')
GROUP BY t1.a;

SELECT t1.a FROM t1
GROUP BY t1.a
HAVING t1.a IN (a, 'y');

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a FROM t1 HAVING 1 > 0;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a FROM t1 WHERE a > 1 HAVING 1;

SELECT *
FROM t1
GROUP BY t1.a,t1.b,t1.c;

SELECT t1.a REGEXP '.*'
FROM t1
GROUP BY t1.a;

SELECT t1.a & t1.b
FROM t1
GROUP BY t1.a,t1.b;

SELECT t1.a | t1.b,~t1.a
FROM t1
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT *
FROM t1
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a + t1.c,MAX(t1.b)
FROM t1
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1
GROUP BY t1.a + 1;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1
GROUP BY '';

SELECT 2.03
FROM t1
GROUP BY '';

SELECT 2
FROM t1
GROUP BY '';

SELECT 'aa'
FROM t1
GROUP BY '';

--echo #
--echo #
--echo # SELECT list checking.
--echo #
--echo #

--echo # Functions in SELECT list

CREATE TABLE t3 (x INT, y VARCHAR(3), z VARCHAR(5));
INSERT INTO t3 VALUES (1, 'aa','aa '),(2, 'Aa ','aa ');

SELECT TRIM(t3.y) = TRIM(t3.z),t3.y,t3.z
FROM t3;
SELECT TRIM(t3.y) = TRIM(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT ELT(1,t3.y) = ELT(1,t3.z),t3.y,t3.z
FROM t3;
SELECT ELT(1,t3.y) = ELT(1,t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT FIELD(t3.y,t3.y) = FIELD(t3.z,t3.z),t3.y,t3.z
FROM t3;
SELECT FIELD(t3.y,t3.y) = FIELD(t3.z,t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT SPACE(t3.y) = SPACE(t3.z),t3.y,t3.z
FROM t3;
SELECT SPACE(t3.y) = SPACE(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LCASE(t3.y) = LCASE(t3.z),t3.y,t3.z
FROM t3;
SELECT LCASE(t3.y) = LCASE(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT SOUNDEX(t3.y) = SOUNDEX(t3.z),t3.y,t3.z
FROM t3;
SELECT SOUNDEX(t3.y) = SOUNDEX(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LENGTH(t3.y) = LENGTH(t3.z),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT LENGTH(t3.y) = LENGTH(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT CONCAT(t3.y,'aa') = CONCAT(t3.z,'aa'),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT CONCAT(t3.y,'aa') = CONCAT(t3.z,'aa'),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT QUOTE(t3.y) = QUOTE(t3.z),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT QUOTE(t3.y) = QUOTE(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT t3.y LIKE 'aa' = t3.z LIKE 'aa ',t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT t3.y LIKE 'aa' = t3.z LIKE 'aa ',t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LOCATE(t3.y,' aa')=LOCATE(t3.z,' aa'),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT LOCATE(t3.y,' aa')=LOCATE(t3.z,' aa'),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT ASCII(t3.y)=ASCII(t3.z),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT ASCII(t3.y)=ASCII(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT ORD(t3.y)=ORD(t3.z),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT ORD(t3.y)=ORD(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT FIND_IN_SET(t3.y,'aa ,aa')=FIND_IN_SET(t3.z,'aa ,aa'),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT FIND_IN_SET(t3.y,'aa ,aa')=FIND_IN_SET(t3.z,'aa ,aa'),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT ORD(t3.y)=ORD(t3.z),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT ORD(t3.y)=ORD(t3.z),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LENGTH(LTRIM(t3.y)) = LENGTH(LTRIM(t3.z)),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT LENGTH(LTRIM(t3.y)) = LENGTH(LTRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LENGTH(RTRIM(t3.y)) = LENGTH(RTRIM(t3.z)),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT LENGTH(RTRIM(t3.y)) = LENGTH(RTRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT RTRIM(LTRIM(t3.y)) = RTRIM(LTRIM(t3.z)),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT RTRIM(LTRIM(t3.y)) = RTRIM(LTRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT QUOTE(TRIM(t3.y)) = QUOTE(TRIM(t3.z)),t3.y,t3.z
FROM t3;
--error ER_NON_GROUPING_FIELD_USED
SELECT QUOTE(TRIM(t3.y)) = QUOTE(TRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT RTRIM(TRIM(t3.y)) = RTRIM(TRIM(t3.z)),t3.y,t3.z
FROM t3;
SELECT RTRIM(TRIM(t3.y)) = RTRIM(TRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

SELECT LCASE(TRIM(t3.y)) = LCASE(TRIM(t3.z)),t3.y,t3.z
FROM t3;
SELECT LCASE(TRIM(t3.y)) = LCASE(TRIM(t3.z)),t3.y,t3.z
FROM t3
GROUP BY t3.y,t3.z;

EXPLAIN EXTENDED SELECT RAND()
FROM t3
GROUP BY t3.x;

EXPLAIN EXTENDED SELECT t3.x + RAND()
FROM t3
GROUP BY t3.x;

EXPLAIN EXTENDED SELECT LENGTH(t3.y + RAND())
FROM t3
GROUP BY t3.y;

DROP TABLE t3;

--echo # Forbid using functions that use FLOAT type
CREATE TABLE t3(a INT, b DOUBLE, c FLOAT);
INSERT INTO t3 VALUES(2, 2.2, 2.2), (2, 2.21, 2.211);

SELECT t3.a + 2.04
FROM t3
GROUP BY t3.a;

SELECT t3.a + t3.b
FROM t3
GROUP BY t3.a,t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a + t3.c
FROM t3
GROUP BY t3.a,t3.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b + t3.c
FROM t3
GROUP BY t3.b,t3.c;

SELECT t3.a,t3.b,t3.c
FROM t3
GROUP BY t3.a,t3.b,t3.c;

DROP TABLE t3;

--echo # Mixing INT and BIT
CREATE TABLE t3(a INT, b BIT(8));
INSERT INTO t3 VALUES(2, '11111111');

SELECT a + b
FROM t3
GROUP BY a,b;

SELECT a,b
FROM t3
GROUP BY a,b;

DROP TABLE t3;

--echo # Using FLOAT
CREATE TABLE t3(a INT, b FLOAT);
INSERT INTO t3 VALUES(2, 2.22);

--error ER_NON_GROUPING_FIELD_USED
SELECT a + b
FROM t3
GROUP BY a,b;

SELECT a,LENGTH(b)
FROM t3
GROUP BY a,b;

SELECT a,b
FROM t3
GROUP BY a,b;

DROP TABLE t3;

--echo # User defined variable

SET @a= 1;

SELECT @a FROM t1 GROUP BY @a;

SELECT @a:= @a + t1.a FROM t1 GROUP BY t1.a;

SET @b= 1;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a FROM t1 GROUP BY t1.a + @a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a FROM t1 GROUP BY @a;

--echo # Functionally dependent fields received from
--echo # WHERE clause equality predicates

SELECT t1.a,t1.c,MAX(t1.b)
FROM t1
WHERE t1.a = t1.c
GROUP BY t1.a;

SELECT t1.a,t1.c,t1.b
FROM t1
WHERE t1.a = t1.c AND t1.a = t1.b
GROUP BY t1.a;

SELECT t1.a,t1.c,t1.b
FROM t1
WHERE t1.a = t1.c AND t1.c = t1.b
GROUP BY t1.a;

SELECT t1.a,t1.b,MAX(t1.c)
FROM t1
WHERE t1.b = 2
GROUP BY t1.a;

SELECT t1.a,t1.b,t1.c
FROM t1
WHERE t1.a = 1 AND t1.b = 2
GROUP BY t1.c;

SELECT t1.a,t1.b,t1.c
FROM t1
WHERE t1.a = t1.b AND t1.b = 2
GROUP BY t1.c;

SELECT MAX(t1.a)
FROM t1
WHERE t1.a = t1.b
GROUP BY t1.b;

SELECT t1.a
FROM t1
WHERE 1 = 0
GROUP BY t1.a;

SELECT t1.a
FROM t1
WHERE 1 = 1
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b
FROM t1
WHERE t1.a = 1 AND t1.b = t1.c
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.y
FROM t2
WHERE t2.x = t2.y
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.y
FROM t1,t2
WHERE t1.a = t2.y
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.b
FROM t1
WHERE t1.b = 'aaa'
GROUP BY t1.a;

SELECT t1.b
FROM t1
WHERE t1.b = 'aaa' AND t1.a = t1.b
GROUP BY t1.a;

SELECT t1.b
FROM t1
WHERE t1.b = 1.01 AND t1.a = t1.b
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b,t1.c
FROM t1
WHERE (t1.c,t1.c) = (1,1)
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b,t1.c
FROM t1
WHERE (t1.a,t1.c) = (1,1)
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b,t1.c
FROM t1
WHERE (t1.a,t1.b,t1.c) = (1,2,1)
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.c
FROM t1
WHERE (t1.a,t1.b,t1.c) = (1,2,1)
GROUP BY t1.a;

--echo # Non-deterministic function in WHERE

CREATE TABLE t3 (x INT, y VARCHAR(3), z VARCHAR(5));
INSERT INTO t3 VALUES (1, 'aa','a'),(2, 'aa ','a ');

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.x
FROM t3
WHERE t3.x = LENGTH(t3.y)
GROUP BY t3.y;

SELECT t3.z
FROM t3
WHERE t3.x = LENGTH(t3.y) AND t3.y = t3.z
GROUP BY t3.y;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.x
FROM t3
WHERE t3.x = RAND()
GROUP BY '';

DROP TABLE t3;

--echo # Functionally dependent fields received from PRIMARY KEY

CREATE TABLE t3(pk INT PRIMARY KEY, b INT, c INT, d INT);
INSERT INTO t3 VALUES (1,2,1,1),(2,3,3,4),(3,4,2,2);

SELECT t3.pk,t3.c,MAX(t3.b)
FROM t3
GROUP BY t3.pk;

SELECT t3.pk,t3.c,MAX(t3.b)
FROM t3
WHERE t3.c = t3.d
GROUP BY t3.pk;

SELECT t3.pk,t3.c,MAX(t3.b)
FROM t3
WHERE t3.pk = t3.d
GROUP BY t3.d;

SELECT t3.pk,t1.a,MAX(t3.b)
FROM t3,t1
WHERE t3.c = t1.a
GROUP BY t3.pk;

SELECT t3.pk,t3.b,t1.a,MAX(t3.b)
FROM t3,t1
WHERE t3.pk = t1.a
GROUP BY t1.a;

SELECT *
FROM t3
GROUP BY t3.pk;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.pk,t1.a,MAX(t3.b)
FROM t3,t1
WHERE t3.c = t1.b
GROUP BY t3.pk;

DROP TABLE t3;

CREATE TABLE t3(a INT, b INT, c INT, PRIMARY KEY (a,b));
INSERT INTO t3 VALUES (1,2,1),(2,3,3),(3,4,2);

SELECT *
FROM t3
GROUP BY t3.a,t3.b;

SELECT *
FROM t3
GROUP BY t3.b,t3.a;

SELECT *
FROM t3
WHERE t3.a = 1 AND t3.b = 2
GROUP BY t3.c;

DROP TABLE t3;

CREATE TABLE t3(a INT, b INT, c INT, PRIMARY KEY (a,b));
INSERT INTO t3 VALUES (1,NULL,1),(2,3,3),(3,4,2);

SELECT *
FROM t3
GROUP BY t3.a,t3.b;

DROP TABLE t3;

--echo # Functionally dependent fields received from UNIQUE KEYs

CREATE TABLE t3 (a INT NOT NULL, b INT NOT NULL,
                 c CHAR(5), d INT,
                 UNIQUE idx1 (a,b), UNIQUE idx2 (c));
INSERT INTO t3 VALUES (1,2,'ccc',4), (2,2,'aaa',4), (2,3,'ex',1);

SELECT t3.a,t3.b,t3.d
FROM t3
GROUP BY t3.a,t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a,t3.b,t3.d
FROM t3
GROUP BY t3.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT *
FROM t3
GROUP BY t3.c;

SELECT *
FROM t3
GROUP BY t3.a,t3.b;

SELECT *
FROM t3
GROUP BY t3.b,t3.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a,t3.b
FROM t3
GROUP BY t3.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a,t3.b,t3.d
FROM t3
WHERE t3.a = t3.d
GROUP BY t3.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT *
FROM t3
GROUP BY t3.a;

DROP TABLE t3;

--echo # Functionally dependent fields received from Virtual columns

CREATE TABLE t3 (a INT, b INT, c INT AS (a*b) VIRTUAL,
                 d INT AS (b*b*2) VIRTUAL, e INT AS (1*2));
INSERT INTO t3 VALUES (1,3,default,default,default),
                      (2,2,default,default,default),
                      (1,2,default,default,default);

SELECT t3.a,t3.c
FROM t3
GROUP BY t3.a,t3.c;

SELECT t3.a,t3.c
FROM t3
GROUP BY t3.a,t3.b;

SELECT t3.a,t3.c,t3.d
FROM t3
GROUP BY t3.a,t3.b;

SELECT t3.d
FROM t3
GROUP BY t3.b;

SELECT t3.e
FROM t3
GROUP BY t3.e;

SELECT t3.e
FROM t3
GROUP BY t3.e + 1;

SELECT t3.a,t3.c,t3.d
FROM t3
WHERE t3.a = t3.b
GROUP BY t3.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t3
GROUP BY t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.d
FROM t3
GROUP BY t3.d + 1;

DROP TABLE t3;

--echo #
--echo # Non-field item in GROUP BY
--echo #

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1
GROUP BY t1.a/3;

SELECT t1.a/3
FROM t1
GROUP BY t1.a/3;

SELECT t1.a + 3
FROM t1
GROUP BY t1.a + 3;

SELECT t1.a + 3 + t1.b
FROM t1
GROUP BY t1.a + 3,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a + t1.b + 3
FROM t1
GROUP BY t1.a + 3,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a + (3 + t1.b)
FROM t1
GROUP BY t1.a + 3,t1.b;

CREATE TABLE t3(a INT, b VARCHAR(3), c VARCHAR(3));
INSERT INTO t3 VALUES (1, 'aa', 'aa '), (2, 'aa ', 'aa ');

SELECT LENGTH(b)
FROM t1
GROUP BY LENGTH(b);

SELECT LENGTH(b) + 1
FROM t1
GROUP BY LENGTH(b);

SELECT LENGTH(b) + 2.01
FROM t1
GROUP BY LENGTH(b);

DROP TABLE t3;

--echo # Different function types in WHERE

--echo #
--echo # NUMERIC functions in WHERE
--echo #

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b
FROM t1
WHERE t1.a + 2 = t1.b + 1/2
GROUP BY t1.b;

SELECT t1.a,t1.b
FROM t1
WHERE t1.b + t1.c = t1.a
GROUP BY t1.b,t1.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.x,t2.y
FROM t2
WHERE t2.x = t2.y + 1
GROUP BY t2.y;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b
FROM t1
WHERE t1.b/t1.c = t1.a
GROUP BY t1.b,t1.c;

SELECT t1.a,t1.c
FROM t1
WHERE t1.a % t1.b = t1.c
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.b
FROM t1
WHERE (t1.b = 'aaa')
GROUP BY t1.a;

--echo # COERCIBILITY

SELECT COERCIBILITY(t1.a) FROM t1 GROUP BY t1.a;

SELECT t1.b
FROM t1
WHERE COERCIBILITY(t1.a) = t1.b
GROUP BY t1.a;

--echo # IN func

CREATE TABLE t3 (a INT, c BOOL, d BOOL, e BOOL);
INSERT INTO t3 VALUES (1, true, false, false), (2, false, false, true),
                      (3, false, false, false), (4, true, false, true);

SELECT t3.c
FROM t2,t3
WHERE t2.x IN (2,3) = t3.c
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.y
FROM t2
WHERE 1 IN (2,3) = t2.y
GROUP BY t2.x;

--echo # BETWEEN

SELECT t3.c
FROM t2,t3
WHERE t2.x BETWEEN 2 AND 3 = t3.c
GROUP BY t2.x;

--echo # AND,OR[NOT]

SELECT t3.e
FROM t3
WHERE t3.e = (t3.c AND t3.d)
GROUP BY t3.c,t3.d;

SELECT t3.e
FROM t3
WHERE t3.e = (t3.c OR t3.d)
GROUP BY t3.c,t3.d;

SELECT t3.e
FROM t3
WHERE t3.e = (t3.c OR NOT t3.d)
GROUP BY t3.c,t3.d;

--echo # IS TRUE

SELECT t3.c
FROM t3
WHERE t3.c = (2 IS TRUE)
GROUP BY t3.d;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t3
WHERE t3.c = 'aa' IS TRUE
GROUP BY t3.d;

DROP TABLE t3;

--echo #
--echo # CONTROL FLOW functions
--echo #

CREATE TABLE t3 (a INT, b INT);
INSERT INTO t3 VALUES (NULL,NULL),(NULL,3),(1,1),(1,3);

SELECT t3.a,t3.b
FROM t3
WHERE IFNULL(t3.a,3) = t3.b
GROUP BY t3.a;

SELECT t3.a,t3.b
FROM t3
WHERE CASE t3.a
      WHEN 1 THEN 3
      ELSE NULL END = t3.b
GROUP BY t3.a;

SELECT t3.a,t3.b
FROM t3
WHERE NULLIF(t3.a,3) = t3.b
GROUP BY t3.a;

SELECT t3.a,t3.b
FROM t3
WHERE IF(t3.a,1,3) = t3.b
GROUP BY t3.a;

DROP TABLE t3;

--echo #
--echo # STRING functions
--echo #

CREATE TABLE t3(a BLOB, b VARCHAR(5), c DOUBLE, d VARCHAR(5));
INSERT INTO t3 VALUES ('aa', 'aa', 23.01, 'aa'), ('aa ','aa ', NULL, 'aa ');

SELECT t3.a
FROM t3
WHERE t3.a = ELT(1,t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = ELT(1,t3.b)
GROUP BY t3.b;

SELECT t3.d
FROM t3
WHERE t3.d = ELT(1,t3.b)
GROUP BY t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t3
WHERE t3.a = FIELD('aa',t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = FIELD('aa',t3.b)
GROUP BY t3.b;

SELECT t3.a
FROM t3
WHERE t3.a = FORMAT(t3.b,4)
GROUP BY t3.b;

SELECT t3.a
FROM t3
WHERE t3.a = LCASE(t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = UCASE(t3.b)
GROUP BY t3.b;

SELECT t3.a
FROM t3
WHERE t3.a = TRIM(t3.b)
GROUP BY t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t3
WHERE t3.c = LTRIM(t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = RTRIM(t3.b)
GROUP BY t3.b;

SELECT t3.a
FROM t3
WHERE t3.a = SOUNDEX(t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = SPACE(t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = STRCMP(t3.b+'aa',t3.b)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = STRCMP(t3.b+'aa',0)
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = 'aa'
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = 'aa' + t3.b
GROUP BY t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t3
WHERE t3.a = 'aa' + t3.b
GROUP BY t3.b;

SELECT t3.c
FROM t3
WHERE t3.c = t3.b
GROUP BY t3.b;

SELECT t3.d
FROM t3
WHERE t3.d = 'aa'
GROUP BY t3.b;

SELECT t3.d
FROM t3
WHERE t3.d = 'aa'
GROUP BY t3.b;

--echo # LIKE

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b LIKE 'aa' AS like_col
FROM t3
GROUP BY t3.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b LIKE t3.a AS like_col
FROM t3
GROUP BY t3.b,t3.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b
FROM t3
WHERE t3.b = t3.d LIKE 'aa'
GROUP BY t3.d;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b
FROM t3
WHERE t3.b = t3.a LIKE 'aa'
GROUP BY t3.a;

DROP TABLE t3;

--echo #
--echo #
--echo # ORDER BY clause checking
--echo #
--echo #

--error ER_NON_GROUPING_FIELD_USED
SELECT 1
FROM t1
GROUP BY t1.b
ORDER BY t1.a;

SELECT 1
FROM t1
GROUP BY t1.b
ORDER BY t1.b;

SELECT 1
FROM t1
GROUP BY t1.b
ORDER BY t1.b + 1;

SELECT 1
FROM t1
WHERE t1.a = t1.b
GROUP BY t1.b
ORDER BY t1.a;

CREATE TABLE t3 (x INT, y VARCHAR(3), z VARCHAR(5));
INSERT INTO t3 VALUES (1, 'aa','aa '),(2, 'Aa ','aa ');

--error ER_NON_GROUPING_FIELD_USED
SELECT 1
FROM t3
GROUP BY t3.y
ORDER BY LENGTH(t3.y);

--error ER_NON_GROUPING_FIELD_USED
SELECT 1
FROM t3
WHERE t3.x = LENGTH(t3.y)
GROUP BY t3.y
ORDER BY t3.x;

SELECT 1
FROM t3
GROUP BY LENGTH(t3.y)
ORDER BY LENGTH(t3.y);

--echo #
--echo #
--echo # HAVING clause checking
--echo #
--echo #

SELECT 1
FROM t1
GROUP BY t1.a
HAVING t1.a > 1;

--error 1054
SELECT t1.a
FROM t1
WHERE t1.a = t1.b
GROUP BY t1.a
HAVING t1.b > 1;

--error 1054
SELECT t1.a
FROM t1
WHERE t1.a = t1.b
GROUP BY t1.a
HAVING t1.a + t1.b > 1;

--error 1054
SELECT t1.a
FROM t1
WHERE t1.a + 1 = t1.b
GROUP BY t1.a
HAVING t1.a + t1.b > 1;

SELECT t3.y
FROM t3
GROUP BY t3.y
HAVING TRIM(t3.y) > 1;

--error 1054
SELECT t1.a
FROM t1
GROUP BY t1.a
HAVING t1.b > 1;

DROP TABLE t3;

--echo #
--echo # Materialized derived tables/views
--echo #

SELECT dt.x,dt.m
FROM (
      SELECT t2.x,MAX(t2.y) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt
GROUP BY dt.x;

SELECT dt.x,dt.m
FROM t1,
     (
      SELECT t2.x,MAX(t2.y) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt
WHERE t1.a = dt.x
GROUP BY t1.a;

SELECT t1.a,dt.x,dt.m
FROM t1,
     (
      SELECT t2.x,MAX(t2.y) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt
WHERE t1.a + 1 = dt.x
GROUP BY t1.a;

SELECT dt1.x,dt1.m,dt2.a,dt2.s
FROM (
      SELECT t2.x,MAX(t2.z) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt1,
     (
      SELECT t1.a,SUM(t1.b) AS s
      FROM t1
      GROUP BY t1.a
     ) AS dt2
WHERE dt1.x = dt2.a
GROUP BY dt1.x;

CREATE VIEW v1 AS (
  SELECT t1.a, MAX(t1.b) AS mb
  FROM t1
  GROUP BY t1.a
);

SELECT v1.a,v1.mb
FROM v1
GROUP BY v1.a;

SELECT t1.a,v1.a,v1.mb
FROM t1,v1
WHERE t1.a = v1.a
GROUP BY t1.a;

SELECT dt.x,dt.m,v1.a,v1.mb
FROM t1,
     v1,
     (
      SELECT t2.x,MAX(t2.z) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt
WHERE dt.x = v1.a
GROUP BY dt.x;

SELECT t1.a,dt1.x,dt1.m,dt2.a,dt2.s,v1.a,v1.mb
FROM t1,
     v1,
     (
      SELECT t2.x,MAX(t2.z) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt1,
     (
      SELECT t1.a,SUM(t1.b) AS s
      FROM t1
      GROUP BY t1.a
     ) AS dt2
WHERE dt1.x = t1.a AND dt1.x = dt2.a AND dt2.a = v1.a
GROUP BY t1.a;

SELECT dt.a,dt.b
FROM (
      SELECT t1.a,t1.b
      FROM t1
      WHERE t1.a = t1.b
      GROUP BY t1.a
     ) AS dt
GROUP BY dt.a;

SELECT dt.a,dt.b
FROM (
      SELECT t1.a,t1.b
      FROM t1
      WHERE t1.a + 1 = t1.b
      GROUP BY t1.a
     ) AS dt
GROUP BY dt.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,dt1.m,dt2.s
FROM t1,
     (
      SELECT t2.x,MAX(t2.z) AS m
      FROM t2
      GROUP BY t2.x
     ) AS dt1,
     (
      SELECT t1.a,SUM(t1.b) AS s
      FROM t1
      GROUP BY t1.a
     ) AS dt2
WHERE dt1.x = t1.a AND t1.b = dt2.s
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT dt.a,dt.s
FROM (
      SELECT t1.a,t1.b,SUM(t1.c) AS s
      FROM t1
      GROUP BY t1.a
     ) AS dt
GROUP BY dt.a;

SELECT dt.b
FROM (
      SELECT t1.b,MAX(t1.c) AS m1
      FROM t1
      GROUP BY t1.b
      UNION
      SELECT t2.x,MAX(t2.z) AS m2
      FROM t2
      GROUP BY t2.x
     ) AS dt
GROUP BY dt.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT dt.b,dt.m1
FROM (
      SELECT t1.b,MAX(t1.c) AS m1
      FROM t1
      GROUP BY t1.b
      UNION
      SELECT t2.x,MAX(t2.z) AS m2
      FROM t2
      GROUP BY t2.x
     ) AS dt
GROUP BY dt.b;

DROP VIEW v1;

CREATE ALGORITHM=TEMPTABLE VIEW v1 AS (
  SELECT t1.a,t1.a+1 AS s
  FROM t1
);

SELECT v1.a
FROM v1
GROUP BY v1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT v1.a,v1.s
FROM v1
GROUP BY v1.a;

DROP VIEW v1;

--echo #
--echo # UPDATE query
--echo #

CREATE TABLE t3 (x INT, y INT);
INSERT INTO t3 VALUES (1,2);

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      WHERE t1.a = t3.x
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      WHERE t3.x = 1
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      WHERE t3.x = 1
                      GROUP BY t1.a
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1 FROM t1
                      WHERE t1.a = t3.x
                      GROUP BY t1.a
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT t3.x
                      FROM t1
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      WHERE t1.b = t3.x
                      GROUP BY t1.a
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      GROUP BY t1.a
                      HAVING t1.a > 1
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      GROUP BY t1.a
                      HAVING t1.a > t3.x
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT t1.a + t3.x
                      FROM t1
                      GROUP BY t1.a
                      LIMIT 1
                     );

UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      WHERE a = (
                                 SELECT t3.x
                                 FROM t2
                                 GROUP BY t2.x
                                 LIMIT 1
                                )
                      LIMIT 1
                     )
;

UPDATE t3 t3 SET y = (
                      SELECT (
                              SELECT t3.x
                              FROM t2
                              GROUP BY t2.x
                              LIMIT 1
                             )
                      FROM t1
                      LIMIT 1
                     )
;


UPDATE t3 t3 SET y = (
                      SELECT 1
                      FROM t1
                      HAVING t3.x > 1
                      LIMIT 1
                     )
;

--error ER_NON_GROUPING_FIELD_USED
UPDATE t3 t3 SET y = (
                      SELECT t1.b
                      FROM t1
                      GROUP BY t1.a
                      HAVING t1.a > t3.x
                      LIMIT 1
                     );

--error ER_NON_GROUPING_FIELD_USED
UPDATE t3 t3 SET y = (
                      SELECT t1.b > t3.x
                      FROM t1
                      GROUP BY t1.a
                      LIMIT 1
                     );

DROP TABLE t3;

--echo #
--echo # Prepare statement
--echo #

PREPARE stmt FROM "
  SELECT t1.a
  FROM t1
  GROUP BY t1.a;
";

EXECUTE stmt;
EXECUTE stmt;

PREPARE stmt FROM "
  SELECT t1.a + 1
  FROM t1
  GROUP BY t1.a;
";

EXECUTE stmt;
EXECUTE stmt;

PREPARE stmt FROM "
  SELECT t1.a,t1.b
  FROM t1
  WHERE t1.a = t1.b
  GROUP BY t1.b;
";

EXECUTE stmt;
EXECUTE stmt;

PREPARE stmt FROM "
  SELECT dt.a,dt.m
  FROM (
        SELECT t1.a,MAX(t1.b) AS m
        FROM t1
        GROUP BY t1.a
       ) AS dt
  GROUP BY dt.a;
";

EXECUTE stmt;
EXECUTE stmt;

--echo #
--echo #
--echo # Materialized subqueries
--echo #
--echo #

--echo #
--echo # Subquery in SELECT list
--echo #

SELECT (
        SELECT 1
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out;

SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_in
        GROUP BY t1_out.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out;

SELECT (
        SELECT t1_in.a AS s
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out;

SELECT (
        SELECT t1_out.a + 1 AS s
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out;

SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

SELECT (
        SELECT t1_out.a + 1 AS s
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

SELECT (
        SELECT t1_out.a + t1_in.a AS s
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

SELECT (
        SELECT t1_out.a + t1_out.b AS s
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a,t1_out.b;

SELECT (
        SELECT t1_in.a
        FROM t1 AS t1_in
        WHERE t1_out.a > 1
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

SELECT (
        SELECT MAX(t1_out.b)
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

SELECT (
        SELECT t1_in.b
        FROM t1 AS t1_in
        WHERE t1_out.a = t1_in.b
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_in.b
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_in.a
        FROM t1 AS t1_in
        WHERE t1_out.b = 1
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.b
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_in.a
        FROM t1 AS t1_in
        GROUP BY t1_out.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       ) AS x
FROM t1 AS t1_out
GROUP BY x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       )
FROM t1 AS t1_out
HAVING 1 > 0;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_in.b
        FROM t1 AS t1_in
        WHERE t1_out.b = t1_in.b
        GROUP BY t1_in.a
        LIMIT 1
       )
FROM t1 AS t1_out
GROUP BY t1_out.a;

--echo #
--echo # Subquery in WHERE clause
--echo #

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_in.a
                  FROM t1 AS t1_in
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_out.a + t1_out.b AS s
                  FROM t1 AS t1_in
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_out.b + t1_in.a AS sm
                  FROM t1 AS t1_in
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_out.a + t1_out.b
                  FROM t1 AS t1_in
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
GROUP BY t1_out.a;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_in.b
                  FROM t1 AS t1_in
                  WHERE t1_out.b = t1_in.b
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_in.b
                  FROM t1 AS t1_in
                  WHERE t1_out.b = t1_in.b
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1_out.a
FROM t1 AS t1_out
WHERE t1_out.a = (
                  SELECT t1_in.b
                  FROM t1 AS t1_in
                  GROUP BY t1_in.a
                  LIMIT 1
                 )
;

--echo #
--echo # Subquery in HAVING clause
--echo #

SELECT 1
FROM t1 AS t1_out
HAVING (
        SELECT 1
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       )
;

SELECT 1
FROM t1 AS t1_out
HAVING (
        SELECT t1_in.a
        FROM t1 AS t1_in
        GROUP BY t1_in.a
        LIMIT 1
       )
;

SELECT t1_out.a
FROM t1 AS t1_out
GROUP BY t1_out.a
HAVING t1_out.a = (
                   SELECT t1_in.a + t1_out.a
                   FROM t1 AS t1_in
                   GROUP BY t1_in.a
                   LIMIT 1
                  )
;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1_out.a
FROM t1 AS t1_out
HAVING t1_out.a = (
                   SELECT 1
                   FROM t1 AS t1_in
                   GROUP BY t1_in.a
                   LIMIT 1
                  )
;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1_out.a
FROM t1 AS t1_out
HAVING t1_out.a = (
                   SELECT t1_in.a
                   FROM t1 AS t1_in
                   GROUP BY t1_in.a
                   LIMIT 1
                  )
;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1_out.a
FROM t1 AS t1_out
HAVING t1_out.a = (
                   SELECT t1_out.a
                   FROM t1 AS t1_in
                   GROUP BY t1_in.a
                   LIMIT 1
                  )
;

--echo #
--echo # Subquery inside another subquery
--echo #

--echo # SELECT subquery in SELECT subquery
SELECT (
        SELECT (
                SELECT t1_out.a + t2.x
                FROM t1 AS t1_in
                GROUP BY t1_in.a
                LIMIT 1
               )
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT (
                SELECT t1_out.b
                FROM t1 AS t1_in
                GROUP BY t1_in.a
                LIMIT 1
               )
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT (
                SELECT t2.y
                FROM t1 AS t1_in
                GROUP BY t1_in.a
                LIMIT 1
               )
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT (
                SELECT t1_out.a
                FROM t1 AS t1_in
                GROUP BY t1_in.a
                HAVING t1_out.b > 1
                LIMIT 1
               )
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--echo # WHERE subquery in SELECT subquery
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        WHERE t1_out.a = (
                          SELECT t1_in.a + t1_out.a + t1_out.b + t2.x AS s
                          FROM t1 AS t1_in
                          GROUP BY t1_in.a
                          LIMIT 1
                         )
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        WHERE t1_out.a = (
                          SELECT t1_out.b
                          FROM t1 AS t1_in
                          GROUP BY t1_in.a
                          HAVING t1_out.b > 1
                          LIMIT 1
                         )
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        WHERE t1_out.a = (
                          SELECT t2.y
                          FROM t1 AS t1_in
                          GROUP BY t1_in.a
                          LIMIT 1
                         )
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        WHERE t1_out.a = (
                          SELECT t1_in.a
                          FROM t1 AS t1_in
                          WHERE t2.y = 'aaa'
                          GROUP BY t1_in.a
                          LIMIT 1
                         )
        GROUP BY t1_out.a
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--echo # HAVING subquery in SELECT subquery
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        HAVING t1_out.a = (
                           SELECT t1_out.a + t1_in.a + t2.x AS s
                           FROM t1 AS t1_in
                           GROUP BY t1_in.a
                           LIMIT 1
                          )
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        HAVING t1_out.a = (
                           SELECT t2.x
                           FROM t1 AS t1_in
                           GROUP BY t1_in.a
                           LIMIT 1
                          )
        LIMIT 1
       )
FROM t2;

--error ER_NON_GROUPING_FIELD_USED
SELECT (
        SELECT t1_out.a
        FROM t1 AS t1_out
        GROUP BY t1_out.a
        HAVING t1_out.a = (
                           SELECT t2.y
                           FROM t1 AS t1_in
                           GROUP BY t1_in.a
                           LIMIT 1
                          )
        LIMIT 1
       )
FROM t2
GROUP BY t2.x;

--echo # WHERE subquery in WHERE subquery
SELECT t2.x
FROM t2
WHERE t2.x = (
              SELECT t1_out.a
              FROM t1 AS t1_out
              WHERE t1_out.a = (
                                SELECT t1_in.a + t1_out.a + t1_out.b AS s
                                FROM t1 AS t1_in
                                GROUP BY t1_in.a
                                LIMIT 1
                               )
              GROUP BY t1_out.a
              LIMIT 1
             )
GROUP BY t2.x;

SELECT t2.x
FROM t2
WHERE t2.x = (
              SELECT t1_out.a
              FROM t1 AS t1_out
              WHERE t1_out.a = (
                                SELECT t2.y
                                FROM t1 AS t1_in
                                GROUP BY t1_in.a
                                HAVING t2.y > 1
                                LIMIT 1
                               )
              GROUP BY t1_out.a
              LIMIT 1
             )
GROUP BY t2.x;

--echo # SELECT subquery in WHERE subquery
SELECT t2.x
FROM t2
WHERE t2.x = (
              SELECT (
                      SELECT t1_in.a + t1_out.a + t2.x
                      FROM t1 AS t1_in
                      GROUP BY t1_in.a
                      HAVING t2.x > 1
                      LIMIT 1
                     )
              FROM t1 AS t1_out
              GROUP BY t1_out.a
              LIMIT 1
             )
GROUP BY t2.x;

SELECT t2.x
FROM t2
WHERE t2.x = (
              SELECT (
                      SELECT t1_in.a + t1_out.a + t2.z
                      FROM t1 AS t1_in
                      GROUP BY t1_in.a
                      HAVING t2.z > 1
                      LIMIT 1
                     )
              FROM t1 AS t1_out
              GROUP BY t1_out.a
              HAVING t2.z > 1
              LIMIT 1
             )
GROUP BY t2.x;

--echo # HAVING subquery in WHERE subquery
SELECT t2.y
FROM t2
WHERE t2.x = (
              SELECT t1_out.a
              FROM t1 AS t1_out
              GROUP BY t1_out.a
              HAVING t1_out.a = (
                                 SELECT t1_in.a + t1_out.a + t2.z AS s
                                 FROM t1 AS t1_in
                                 GROUP BY t1_in.a
                                 LIMIT 1
                                )
             LIMIT 1
            )
GROUP BY t2.y;

--echo # HAVING subquery in HAVING subquery
SELECT t2.x
FROM t2
GROUP BY t2.x
HAVING t2.x = (
               SELECT t1_out.a
               FROM t1 AS t1_out
               GROUP BY t1_out.a
               HAVING t1_out.a = (
                                  SELECT t1_in.a + t2.x AS s
                                  FROM t1 AS t1_in
                                  GROUP BY t1_in.a
                                  LIMIT 1
                                 )
               LIMIT 1
              )
;

--echo # SELECT subquery in HAVING subquery
SELECT t2.x
FROM t2
GROUP BY t2.x
HAVING t2.x = (
               SELECT (
                       SELECT t1_in.a + t1_out.a + t2.x AS s
                       FROM t1 AS t1_in
                       GROUP BY t1_in.a
                       LIMIT 1
                      )
               FROM t1 AS t1_out
               GROUP BY t1_out.a
               LIMIT 1
              )
;

--echo # WHERE subquery in HAVING subquery
SELECT t2.x
FROM t2
GROUP BY t2.x
HAVING t2.x = (
               SELECT t1_out.a
               FROM t1 AS t1_out
               WHERE t1_out.a = (
                                 SELECT t1_in.a + t1_out.a + t1_out.b AS s
                                 FROM t1 AS t1_in
                                 GROUP BY t1_in.a
                                 LIMIT 1
                                )
               GROUP BY t1_out.a
               LIMIT 1
              )
;

--echo # materialized IN subquery

SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT MAX(t1_in.a),t1_out.b
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                              )
GROUP BY t1_out.a;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT MAX(t1_in.a),t1_out.c
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                               HAVING t1_out.b > 1
                              )
GROUP BY t1_out.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT MAX(t1_in.a),t1_in.c
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                              )
GROUP BY t1_out.a;

--echo # Subquery is simplified after simplify_joins()
SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT t1_in.b,t1_out.b
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                              )
GROUP BY t1_out.a;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT t1_in.a,t1_out.b
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                              )
GROUP BY t1_out.a;

SELECT t1_out.a
FROM t1 AS t1_out
WHERE (t1_out.a, t1_out.b) IN (
                               SELECT t1_in.c,t1_out.b
                               FROM t1 AS t1_in
                               GROUP BY t1_in.b
                              )
GROUP BY t1_out.a;

--echo # EXISTS

SELECT t1.a
FROM t1
WHERE EXISTS (
              SELECT MAX(t2.x)
              FROM t2
              WHERE t2.x = t1.a
              GROUP BY t2.x
             )
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1
WHERE EXISTS (
              SELECT t2.y,MAX(t2.y)
              FROM t2
              WHERE t2.x = t1.a
              GROUP BY t2.x
             )
GROUP BY t1.a;

set optimizer_switch='exists_to_in=off';

SELECT t1.a
FROM t1
WHERE EXISTS (
              SELECT t2.x,MAX(t2.y)
              FROM t2
              WHERE t2.x = t1.a
              GROUP BY t2.x
             )
GROUP BY t1.a;

SELECT t1.a
FROM t1
WHERE EXISTS (
              SELECT t2.y
              FROM t2
              WHERE t2.x = t1.a
              GROUP BY t2.x
             )
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1
WHERE EXISTS (
              SELECT t2.y,MAX(t2.x)
              FROM t2
              WHERE t2.x = t1.a
              GROUP BY t2.x
             )
GROUP BY t1.a;

set optimizer_switch='exists_to_in=default';

--echo #
--echo # Using constant fields
--echo #

SELECT t1.a
FROM t1
WHERE t1.a = 2
GROUP BY t1.b;

SELECT t1.a,t1.b
FROM t1
WHERE t1.a = t1.b AND t1.a = 2
GROUP BY t1.c;

SELECT t1.a,t1.b
FROM t1
WHERE t1.a + 2 = t1.b AND t1.a = 2
GROUP BY t1.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t1.b
FROM t1
WHERE t1.a + 2/3 = t1.b AND t1.a = 2
GROUP BY t1.c;

DROP TABLE t1,t2;

--echo #
--echo # Using ROLLUP
--echo #

CREATE TABLE t3(pk INT PRIMARY KEY, b INT, c INT, d INT);
INSERT INTO t3 VALUES (1,2,1,5),(2,2,3,2),(3,4,2,4);

SELECT t3.b,MAX(t3.d)
FROM t3
GROUP BY t3.b WITH ROLLUP;

SELECT t3.b,t3.c,MAX(t3.d)
FROM t3
GROUP BY t3.b,t3.c WITH ROLLUP;

SELECT t3.b+t3.c,MAX(t3.d)
FROM t3
GROUP BY t3.b,t3.c WITH ROLLUP;

SELECT t3.b,MAX(t3.d)
FROM t3
GROUP BY t3.b WITH ROLLUP;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.b,t3.c,MAX(t3.d)
FROM t3
GROUP BY t3.b WITH ROLLUP;

SELECT t3.pk,MAX(t3.d)
FROM t3
GROUP BY t3.pk WITH ROLLUP;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.pk,t3.b,MAX(t3.d)
FROM t3
GROUP BY t3.pk WITH ROLLUP;

DROP TABLE t3;

--echo #
--echo #
--echo # Using LEFT/RIGHT JOINS
--echo #
--echo #

--echo #
--echo # ON expression rules check
--echo #

CREATE TABLE t1(a INT, b INT);
INSERT INTO t1 VALUES (1,2), (2,3);
INSERT INTO t1 VALUES ();
CREATE TABLE t2(c INT, d INT);
INSERT INTO t2 VALUES (2,1);
INSERT INTO t2 VALUES ();
INSERT INTO t2 VALUES (2,3);

SELECT t2.c
FROM t1 LEFT JOIN t2 ON t2.c = 2
GROUP BY t2.d;

SELECT t2.c
FROM t1 LEFT JOIN t2 ON t2.c = 2
GROUP BY t1.a;

SELECT t2.c
FROM t1 LEFT JOIN t2 ON t2.c = t1.a
GROUP BY t1.a;

SELECT t2.c
FROM t1 LEFT JOIN t2 ON (t2.c = 2) AND (t1.a = 2)
GROUP BY t1.a;

SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND (t2.c = 1)
                  ) ON (t1.a = t2.d)
GROUP BY t2.c;

SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND (t2.c = 1)
                  ) ON (t1.a = t2.c)
GROUP BY t1.a;

SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND (t2.c > 1)
                  ) ON (t1.a = t2.c)
GROUP BY t1.a;

SELECT t1.a,t2.d,t3.c,t3.d
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND
                                            (t2.d = 1) AND
                                            (t3.d = t2.d)
                  ) ON (t1.a = t2.d)
GROUP BY t1.a;

SELECT t3.c
FROM t1 JOIN (
              t2 LEFT JOIN t2 AS t3 ON (t3.c = 2)
             ) ON (t1.a = 1)
GROUP BY "";

SELECT t4.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1)
                                ) ON (t2.c = t4.b)
                  ) ON (t1.a = t2.d)
GROUP BY t2.c;

SELECT t4.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1) AND
                                                       (t3.c = t3.c)
                                ) ON (t2.c = t3.c)
                  ) ON (t1.a = t2.c)
GROUP BY t1.a;

SELECT t3.c
FROM t1 LEFT JOIN (
                   t2
                   JOIN t2 AS t3 ON (t3.c = 2)
                  ) ON (t1.a = 1)
GROUP BY t1.a;

--echo # Is transformed into:
--echo # "select t3.c AS c from t1 join t2 left join t2 t3 on
--echo #  (t3.c = 2) where t1.a = 1 group by t2.c"
SELECT t3.c
FROM t1 JOIN (
              t2 LEFT JOIN t2 AS t3 ON (t3.c = 2)
             ) ON (t1.a = 1)
GROUP BY t2.c;

SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 JOIN
                   t2 AS t3 ON (t3.c = 2) AND (t2.c = t2.c)
                  ) ON (t1.a = 1)
GROUP BY t1.a;
SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON (t2.d = t3.a)
                  ) ON 1 > 0
GROUP BY t2.d;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON 1 > 0
                  ) ON 1 > 0
GROUP BY t3.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON 1 > 0
                  ) ON (t1.a = t2.d)
GROUP BY t3.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON 1 > 0
                  ) ON (t1.a = 1)
GROUP BY t3.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = 2) AND
                                                       (t3.a > 1)
                                ) ON t2.d = t3.a
                  ) ON (t2.d = t1.a) AND (t2.c > 2)
GROUP BY t1.a;

SELECT t3.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN
                   t1 AS t3 ON (t2.d = t3.a) AND (t2.d > 1)
                  ) ON (t2.d = t1.a) AND (t2.c > 1)
GROUP BY t1.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = 2) AND
                                                       (t3.a > 0)
                                ) ON (t2.d = t3.a) AND (t2.d > 1)
                  ) ON t2.d = t1.a
GROUP BY t1.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON 1 > 0
                  ) ON (t1.a = 1)
GROUP BY t3.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON (t2.c = 2)
                  ) ON (t1.a = 1)
GROUP BY t3.a;

SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON (t2.c = 2)
                  ) ON 1 > 0
GROUP BY t3.a;

SELECT t3.a
FROM t1 LEFT JOIN (
                   t2
                   JOIN t1 AS t3 ON (t2.c = t3.a) AND (t2.d > 1)
                  ) ON (t1.a = t2.c)
GROUP BY t1.a;

--echo # Is transformed into
--echo # "select t1.b AS b from t1 join t2 where t1.a = t2.c
--echo #  and t1.b = t2.c and t2.d = t2.c group by t1.a"
SELECT t1.b
FROM t1 LEFT JOIN t2 ON (t2.d = t2.c)
WHERE t1.a = t2.c AND t1.b = t2.c
GROUP BY t1.a;

--echo # Is transformed into
--echo # "select t1.b AS b from t1 join t2 where t1.a = t2.c
--echo #  and t2.d = t2.c and t1.b = t2.d group by t1.a"
SELECT t1.b
FROM t1 LEFT JOIN t2 ON (t2.d = t2.c AND t1.b = t2.d)
WHERE t1.a = t2.c
GROUP BY t1.a;

--echo # Non-grouping left table LEFT JOIN field t1.b is used
--echo # in ON expression
SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t1.a = 12 AND t1.b = t2.d;
--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1 LEFT JOIN t2 ON t1.a = 12 AND t1.b = t2.d
GROUP BY t2.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.b
FROM t1 LEFT JOIN t2 ON t1.a = t1.b
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.b
FROM t1 LEFT JOIN t2 ON t1.b = t2.c
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.c
FROM t1 LEFT JOIN t2 ON (t2.c = 2) AND (t1.b = 2)
GROUP BY t1.a;

--echo # ON expression equality predicate can't be used to state
--echo # that left LEFT JOIN field t1.a is functionally dependent field
--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1 LEFT JOIN t2 ON t1.a = 12
GROUP BY t2.c;

--echo # No left table field (t2 field) is used in the ON expression
--echo # of the most inner LEFT JOIN
--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t1
LEFT JOIN (
           t2 LEFT JOIN t2 AS t3 ON (t3.c = 2)
          ) ON (t1.a = 2)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.d,t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND
                                            (t2.c = t2.d)
                  ) ON (t1.a = t2.d)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.d,t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2) AND
                                            (t2.c = t2.d)
                  ) ON 1 > 0
GROUP BY t2.d;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.d,t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN t2 AS t3 ON (t3.c = 2)
                  ) ON 1 > 0
GROUP BY t2.d;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1)
                                ) ON (t2.c = 1)
                  ) ON (t1.a = 1)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1)
                                ) ON (t3.c = 1)
                  ) ON (t1.a = 1)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1)
                                ) ON (t3.c = 1)
                  ) ON (t1.a = 1)
GROUP BY t3.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t2 AS t3
                                 LEFT JOIN t1 AS t4 ON (t4.a = 1)
                                ) ON (t2.c = t2.d)
                  ) ON (t1.a = t2.d)
GROUP BY t3.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 JOIN
                   t2 AS t3 ON (t3.c = 2)
                  ) ON (t1.a = 1)
GROUP BY "";

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 JOIN
                   t2 AS t3 ON (t3.c = 2) AND (t2.c = t2.c)
                  ) ON (t1.a = 1)
GROUP BY "";

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.c
FROM t1 LEFT JOIN (
                   t2 JOIN
                   t2 AS t3 ON (t3.c = 2) AND (t2.c = t2.c)
                  ) ON 1 > 0
GROUP BY "";

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON t4.c = 2
                                ) ON (t2.d = t3.a) AND (t2.d > 1)
                  ) ON t2.d = t1.a
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = 2) AND
                                                       (t3.a > 1)
                                ) ON t2.d = t3.a AND t2.c > 1
                  ) ON t2.d = t1.a
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = 2) AND
                                                       (t3.a > 1)
                                ) ON (t2.d = t3.a)
                  ) ON (t2.d = t1.a) AND (t1.b > 2)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t4.c
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN (
                                 t1 AS t3
                                 LEFT JOIN t2 AS t4 ON (t4.c = t3.a) AND
                                                       (t3.a > 1)
                                ) ON t2.d = t3.a
                  ) ON t2.d = t1.a AND t1.b > 2
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN
                   t1 AS t3 ON (t3.a = 1) AND (t2.d > 1)
                  ) ON (t2.d = t1.a) AND (t1.b > 1)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t1 LEFT JOIN (
                   t2 LEFT JOIN
                   t1 AS t3 ON (t2.d = t3.a) AND (t2.d > 1)
                  ) ON (t2.d = t1.a) AND (t1.b > 1)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t1 LEFT JOIN (
                   t2
                   JOIN t1 AS t3 ON (t2.c = t3.a) AND (t2.d > 1)
                  ) ON (t1.a > 2)
GROUP BY t2.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.c
FROM t1 LEFT JOIN (
                   t2
                   LEFT JOIN t1 AS t3 ON (t2.c = t3.a) AND (t2.d > 1)
                  ) ON (t1.b > 2) and (t1.a = t2.c)
GROUP BY t2.d;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.a
FROM t1 LEFT JOIN (
                   t2
                   LEFT JOIN t1 AS t3 ON (t2.c = t3.a) AND (t2.d > 1)
                  ) ON (t1.a = t2.c)
GROUP BY t1.a;

--echo #
--echo # Usage of non-deterministic functions
--echo #

CREATE TABLE t3 (x INT, y VARCHAR(3), z VARCHAR(5));
INSERT INTO t3 VALUES (1, 'aa','a'),(2, 'aa ','a ');

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.x
FROM t1
  LEFT JOIN t3 ON (t1.b = LENGTH(t3.y) AND t3.x = t1.a)
GROUP BY t1.a,t1.b;

--error ER_NON_GROUPING_FIELD_USED
SELECT t3.x
FROM t1
  LEFT JOIN t3 ON (CONCAT(t3.y,t3.z) > 'a' AND t3.x = t1.a)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a
FROM t1, t3
WHERE t1.a = LENGTH(t3.y)
GROUP BY t3.y;

SELECT t1.b
FROM t1, t3
WHERE t1.a = LENGTH(t3.y) AND t1.b = t3.x
GROUP BY t3.x;

--echo # rand() function

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t1.a = t2.c AND t1.a > rand()
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t1.a = t2.c AND t2.c > rand()
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t2.d > rand() OR t2.d = 1
GROUP BY t1.a;

SELECT t1.a
FROM t1 LEFT JOIN t2 ON t1.a = t2.c AND t1.a > rand()
GROUP BY t1.a;

SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t1.a = t2.c
WHERE t1.a > rand()
GROUP BY t1.a;

SELECT t1.a,t2.c
FROM t1 LEFT JOIN t2 ON t1.a = t2.c
WHERE t1.a = rand()
GROUP BY t1.a;

SELECT t1.a
FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND (SELECT t1.b)
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.c
FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND (SELECT t1.b)
GROUP BY t1.a;

SELECT t2.c
FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND t1.a
GROUP BY t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.c
FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND (SELECT t1.a)
GROUP BY t1.a;

DROP TABLE t3;

--echo #
--echo #  Mergeable derived table or view on the right side
--echo #  of the LEFT JOIN
--echo #

SELECT d.c
FROM t1 LEFT JOIN (
  SELECT t2.c FROM t2) AS d ON (t1.a > 0)
GROUP BY d.c;

SELECT d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON (t1.a > 0);
--error ER_NON_GROUPING_FIELD_USED
SELECT d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON (t1.a > 0)
GROUP BY d.c;

SELECT d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON 1 > 0
GROUP BY d.c;

SELECT d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON 1 < 0
GROUP BY d.c;

SELECT t1.a,d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON t1.a > 0
GROUP BY d.c,t1.a;

--error ER_NON_GROUPING_FIELD_USED
SELECT d.c,d.x
FROM t1 LEFT JOIN (
  SELECT t2.c,COALESCE(t2.c,2) as x FROM t2) AS d
ON t1.b > 0
GROUP BY d.c,t1.a;

CREATE VIEW v1 AS (
  SELECT t1.a,IFNULL(t1.a,3) as x FROM t1
);

--error ER_NON_GROUPING_FIELD_USED
SELECT v1.a,v1.x
FROM t1 LEFT JOIN v1 ON (t1.a > 0)
GROUP BY v1.a;

SELECT t1.a,v1.a,v1.x
FROM t1 LEFT JOIN v1 ON (t1.a > 0)
GROUP BY v1.a,t1.a;

SELECT v1.a,v1.x
FROM t1 LEFT JOIN v1 ON (1 > 0)
GROUP BY v1.a;

SELECT v1.a,v1.x
FROM t1 LEFT JOIN v1 ON (1 < 0)
GROUP BY v1.a;

DROP VIEW v1;

--echo # User-defined variable with LEFT JOIN

PREPARE stat FROM
  'SELECT t2.c
   FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND (t1.b > ?)
   GROUP BY t1.a;';

--error ER_NON_GROUPING_FIELD_USED
EXECUTE stat USING @dummy;
--error ER_NON_GROUPING_FIELD_USED
EXECUTE stat USING @dummy;

PREPARE stat FROM
  'SELECT t2.c
   FROM t1 LEFT JOIN t2 ON (t1.a = t2.c) AND (t1.a > ?)
   GROUP BY t1.a;';

EXECUTE stat USING @dummy;
EXECUTE stat USING @dummy;

--echo #
--echo # Usage of OUTER JOINS
--echo #

SELECT t1.a,t2.c
FROM t1 LEFT OUTER JOIN t2 ON t1.a = t2.c
GROUP BY t1.a;

SELECT t1.a,t2.c
FROM t1 RIGHT OUTER JOIN t2 ON t1.a = t2.c
GROUP BY t2.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.c
FROM t1 LEFT OUTER JOIN t2 ON t1.a = t2.c
GROUP BY t2.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t1.a,t2.c
FROM t1
LEFT OUTER JOIN t2 ON t1.a = t2.c
  LEFT OUTER JOIN t1 AS t3 ON t1.a = t3.b
GROUP BY t2.c;

--error ER_NON_GROUPING_FIELD_USED
SELECT t2.c,t3.b
FROM t1
LEFT OUTER JOIN t2 ON t1.a = t2.c
  LEFT OUTER JOIN t1 AS t3 ON t1.a = t3.b
GROUP BY t3.b;

--echo # Aggregated functions used if no GROUP BY is used

CREATE VIEW v1 AS (SELECT * FROM t1);

SELECT MAX(v1.a)
FROM v1;

SELECT MAX(v1.a),SUM(v1.a)
FROM v1;

--echo # different error messages, should be the same
--error ER_MIX_OF_GROUP_FUNC_AND_FIELDS
SELECT MAX(t1.a),t1.a
FROM t1;

--error ER_NON_GROUPING_FIELD_USED
SELECT MAX(v1.a),v1.b
FROM v1;

DROP VIEW v1;

DROP TABLE t1,t2;

SET SQL_MODE=' ';
