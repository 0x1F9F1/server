--source include/galera_cluster.inc
--source include/have_innodb.inc
--source include/have_partition.inc

--echo #
--echo # MDEV#4953 Galera: DELETE from a partitioned table is not replicated
--echo #

USE test;
CREATE TABLE t1 (pk INT PRIMARY KEY, i INT) ENGINE=INNODB PARTITION BY HASH(pk) PARTITIONS 2;
INSERT INTO t1 VALUES (1,100), (2,200);
SELECT * FROM t1;

DELETE FROM t1;
SELECT * FROM t1;

--echo
--echo # On node_1
--connection node_1
SELECT * FROM t1;

--echo
--echo # On node_2
--connection node_2
SELECT * FROM t1;

# Cleanup
DROP TABLE t1;

--echo #
--echo # MDEV-5146: Bulk loads into partitioned table not working
--echo #

# Create 2 files with 20002 & 101 entries in each.
--perl
open(FILE, ">", "$ENV{'MYSQLTEST_VARDIR'}/tmp/mdev-5146-1.dat") or die;
foreach  my $i (1..20002) {
        print FILE "$i\n";
}

open(FILE, ">", "$ENV{'MYSQLTEST_VARDIR'}/tmp/mdev-5146-2.dat") or die;
foreach  my $i (1..101) {
        print FILE "$i\n";
}
EOF

--connection node_1

--let $wsrep_load_data_splitting_orig = `SELECT @@wsrep_load_data_splitting`

--echo # Case 1: wsrep_load_data_splitting = ON & LOAD DATA with 20002
--echo # entries.

SET GLOBAL wsrep_load_data_splitting = ON;

CREATE TABLE t1 (pk INT PRIMARY KEY)
  ENGINE=INNODB PARTITION BY HASH(pk) PARTITIONS 2;

# Record wsrep_last_committed as it was before LOAD DATA
--let $wsrep_last_committed_before = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--disable_query_log
--eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/mdev-5146-1.dat' INTO TABLE t1;
--enable_query_log

--let $wsrep_last_committed_after = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--connection node_2
SELECT COUNT(*) = 20002 FROM t1;

# LOAD-ing 20002 rows causes 3 commits to be registered
--disable_query_log
--eval SELECT $wsrep_last_committed_after = $wsrep_last_committed_before + 3 AS wsrep_last_committed_diff;
--enable_query_log

DROP TABLE t1;

--echo # Case 2: wsrep_load_data_splitting = ON & LOAD DATA with 101 entries.

--connection node_1

SET GLOBAL wsrep_load_data_splitting = ON;

CREATE TABLE t1 (pk INT PRIMARY KEY)
  ENGINE=INNODB PARTITION BY HASH(pk) PARTITIONS 2;

# Record wsrep_last_committed as it was before LOAD DATA
--let $wsrep_last_committed_before = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--disable_query_log
--eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/mdev-5146-2.dat' INTO TABLE t1;
--enable_query_log

--let $wsrep_last_committed_after = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--connection node_2
SELECT COUNT(*) = 101 FROM t1;

# LOAD-ing 101 rows causes 1 commit to be registered
--disable_query_log
--eval SELECT $wsrep_last_committed_after = $wsrep_last_committed_before + 1 AS wsrep_last_committed_diff;
--enable_query_log

DROP TABLE t1;

--echo # Case 3: wsrep_load_data_splitting = OFF & LOAD DATA with 20002
--echo # entries.

--connection node_1

SET GLOBAL wsrep_load_data_splitting = OFF;

CREATE TABLE t1 (pk INT PRIMARY KEY)
  ENGINE=INNODB PARTITION BY HASH(pk) PARTITIONS 2;

# Record wsrep_last_committed as it was before LOAD DATA
--let $wsrep_last_committed_before = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--disable_query_log
--eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/mdev-5146-1.dat' INTO TABLE t1;
--enable_query_log

--let $wsrep_last_committed_after = `SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_STATUS WHERE VARIABLE_NAME = 'wsrep_last_committed'`

--connection node_2
SELECT COUNT(*) = 20002 FROM t1;

# LOAD-ing 20002 rows causes 1 commit to be registered
--disable_query_log
--eval SELECT $wsrep_last_committed_after = $wsrep_last_committed_before + 1 AS wsrep_last_committed_diff;
--enable_query_log

DROP TABLE t1;

--connection node_1
# Restore the original value
--eval SET GLOBAL wsrep_load_data_splitting = $wsrep_load_data_splitting_orig;

# Cleanup
remove_file '$MYSQLTEST_VARDIR/tmp/mdev-5146-1.dat';
remove_file '$MYSQLTEST_VARDIR/tmp/mdev-5146-2.dat';

--source include/galera_end.inc
--echo # End of test
