include/master-slave.inc
[connection master]
CREATE TABLE t1 (a INT PRIMARY KEY, b INT);
******************************************************************
* Case1: SQL thread is in sync with IO thread and IO thread is UP
*        Seconds_Behind_Master should be '0'.
******************************************************************
include/assert.inc [Seconds_Behind_Master should be 0]
******************************************************************
* Case2: SQL thread is in sync with IO thread and IO thread is
*        stopped.
*        Seconds_Behind_Master should be 'NULL'.
******************************************************************
include/stop_slave_io.inc
include/assert.inc [Seconds_Behind_Master should be NULL]
******************************************************************
* Case3: SQL thread is stopped while IO thread is up and running.
*        Seconds_Behind_Master should be 'NULL'.
******************************************************************
START SLAVE IO_THREAD;
include/wait_for_slave_io_to_start.inc
include/stop_slave_sql.inc
include/assert.inc [Seconds_Behind_Master should be NULL]
******************************************************************
* Case4: IO thread is stopped. SQL thread is consuming existing relay
*        log. Hence the Seconds_Behind_Master should have a numeric
*        value > 0
******************************************************************
INSERT INTO t1 VALUES (1,sleep(2));
INSERT INTO t1 VALUES (2,sleep(2));
include/sync_slave_io_with_master.inc
include/stop_slave_io.inc
START SLAVE SQL_THREAD;
include/wait_for_slave_sql_to_start.inc
include/assert.inc [Seconds_Behind_Master should be > 0]
START SLAVE IO_THREAD;
include/wait_for_slave_io_to_start.inc
******* CLEANUP *********
DROP TABLE t1;
include/rpl_end.inc
