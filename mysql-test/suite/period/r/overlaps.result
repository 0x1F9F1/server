create or replace table t(id int, s date, e date,
period for p(s,e),
primary key(id, p without overlaps)
) partition by key (id);
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `id` int(11) NOT NULL,
  `s` date NOT NULL,
  `e` date NOT NULL,
  PERIOD FOR `p` (`s`, `e`),
  PRIMARY KEY (`id`,`p` WITHOUT OVERLAPS)
) ENGINE=DEFAULT_ENGINE DEFAULT CHARSET=latin1
 PARTITION BY KEY (`id`)
insert into t values (1, '2003-01-01', '2003-03-01'),
(1, '2003-05-01', '2003-07-01');
insert into t values (1, '2003-02-01', '2003-04-01');
ERROR 23000: Duplicate entry '1-2003-04-01-2003-02-01' for key 'PRIMARY'
insert into t values (1, '2003-04-01', '2003-06-01');
ERROR 23000: Duplicate entry '1-2003-06-01-2003-04-01' for key 'PRIMARY'
insert into t values (1, '2003-05-15', '2003-06-15');
ERROR 23000: Duplicate entry '1-2003-06-15-2003-05-15' for key 'PRIMARY'
insert into t values (1, '2003-04-01', '2003-08-01');
ERROR 23000: Duplicate entry '1-2003-08-01-2003-04-01' for key 'PRIMARY'
insert into t values (1, '2003-03-01', '2003-05-01');
# expand/shrink period
update t set s= '2002-12-01' where s = '2003-01-01';
update t set s= '2003-01-01' where s = '2002-12-01';
update t set e= '2003-08-01' where s = '2003-05-01';
update t set e= '2003-07-01' where s = '2003-05-01';
# move left/right
update t set s= '2002-12-15', e= '2003-01-15' where s = '2003-01-01';
update t set s= '2003-01-01', e= '2003-02-01' where s = '2002-12-15';
# diminish/enlarge
update t set s= '2003-01-10', e= '2003-01-20' where s = '2003-01-01';
update t set s= '2003-01-01', e= '2003-02-01' where s = '2003-01-10';
select * from t;
id	s	e
1	2003-01-01	2003-02-01
1	2003-03-01	2003-05-01
1	2003-05-01	2003-07-01
# intersect left/right, strict inclusion/containment
update t set e= '2003-04-01' where s = '2003-01-01';
ERROR 23000: Duplicate entry '1-2003-04-01-2003-01-01' for key 'PRIMARY'
update t set s= '2003-04-01' where s = '2003-05-01';
ERROR 23000: Duplicate entry '1-2003-07-01-2003-04-01' for key 'PRIMARY'
update t set s= '2003-03-10', e= '2003-03-20' where s = '2003-01-01';
ERROR 23000: Duplicate entry '1-2003-03-20-2003-03-10' for key 'PRIMARY'
update t set s= '2003-04-01', e= '2003-08-01' where s = '2003-03-01';
ERROR 23000: Duplicate entry '1-2003-08-01-2003-04-01' for key 'PRIMARY'
# inclusion/containment with partial match
update t set s= '2003-03-01', e= '2003-04-01' where s = '2003-01-01';
ERROR 23000: Duplicate entry '1-2003-04-01-2003-03-01' for key 'PRIMARY'
update t set s= '2003-04-01', e= '2003-05-01' where s = '2003-01-01';
ERROR 23000: Duplicate entry '1-2003-05-01-2003-04-01' for key 'PRIMARY'
update t set s= '2003-03-01' where s = '2003-05-01';
ERROR 23000: Duplicate entry '1-2003-07-01-2003-03-01' for key 'PRIMARY'
update t set e= '2003-05-01' where s = '2003-01-01';
ERROR 23000: Duplicate entry '1-2003-05-01-2003-01-01' for key 'PRIMARY'
select * from t where year(s) = 2003;
id	s	e
1	2003-01-01	2003-02-01
1	2003-03-01	2003-05-01
1	2003-05-01	2003-07-01
create or replace table t(id int, s date, e date,
period for p(s,e),
primary key(id, q without overlaps));
ERROR HY000: Period `q` is not found in table
create or replace table t(id int, s date, e date,
primary key(id, p without overlaps));
ERROR HY000: Period `p` is not found in table
create or replace table t(id int, s date, e date,
period for p(s,e),
primary key(id, s, p without overlaps));
ERROR HY000: Key `(null)` cannot explicitly include column `s`
create or replace table t(id int, s date, e date,
period for p(s,e),
primary key(id));
insert into t values (1, '2003-03-01', '2003-05-01');
insert into t values (1, '2003-04-01', '2003-05-01');
ERROR 23000: Duplicate entry '1' for key 'PRIMARY'
create or replace table t(id int, u int, s date, e date,
period for p(s,e),
primary key(id, p without overlaps),
unique(u));
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `id` int(11) NOT NULL,
  `u` int(11) DEFAULT NULL,
  `s` date NOT NULL,
  `e` date NOT NULL,
  PERIOD FOR `p` (`s`, `e`),
  PRIMARY KEY (`id`,`p` WITHOUT OVERLAPS),
  UNIQUE KEY `u` (`u`)
) ENGINE=DEFAULT_ENGINE DEFAULT CHARSET=latin1
insert into t values (1, 1, '2003-03-01', '2003-05-01');
insert into t values (1, 2, '2003-05-01', '2003-07-01');
insert into t values (1, 3, '2003-04-01', '2003-05-01');
ERROR 23000: Duplicate entry '1-2003-05-01-2003-04-01' for key 'PRIMARY'
create or replace table t(id int, u int, s date, e date,
period for p(s,e),
primary key(id, p without overlaps),
unique(u, p without overlaps));
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `id` int(11) NOT NULL,
  `u` int(11) DEFAULT NULL,
  `s` date NOT NULL,
  `e` date NOT NULL,
  PERIOD FOR `p` (`s`, `e`),
  PRIMARY KEY (`id`,`p` WITHOUT OVERLAPS),
  UNIQUE KEY `u` (`u`,`p` WITHOUT OVERLAPS)
) ENGINE=DEFAULT_ENGINE DEFAULT CHARSET=latin1
insert into t values (2, NULL, '2003-03-01', '2003-05-01');
insert into t values (2, NULL, '2003-03-01', '2003-05-01');
ERROR 23000: Duplicate entry '2-2003-05-01-2003-03-01' for key 'PRIMARY'
insert into t values (3, NULL, '2003-03-01', '2003-05-01');
insert into t values (1, 1, '2003-03-01', '2003-05-01');
insert into t values (1, 2, '2003-05-01', '2003-07-01');
insert into t values (4, NULL, '2003-03-01', '2003-05-01');
create sequence seq start=5;
update t set id= nextval(seq), u= nextval(seq), s='2003-05-01', e='2003-07-01'
         where u is NULL;
select * from t;
id	u	s	e
1	1	2003-03-01	2003-05-01
1	2	2003-05-01	2003-07-01
5	6	2003-05-01	2003-07-01
7	8	2003-05-01	2003-07-01
9	10	2003-05-01	2003-07-01
create or replace table t(id int, s date, e date,
period for p(s,e));
insert into t values (1, '2003-01-01', '2003-03-01'),
(1, '2003-05-01', '2003-07-01'),
(1, '2003-02-01', '2003-04-01');
alter table t add primary key(id, p without overlaps);
ERROR 23000: Duplicate entry '1-2003-04-01-2003-02-01' for key 'PRIMARY'
delete from t;
insert into t values (1, '2003-01-01', '2003-03-01'),
(1, '2003-03-01', '2003-05-01');
alter table t add primary key(id, p without overlaps);
# `without overlaps` is not lost on alter table
alter table t add y int;
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `id` int(11) NOT NULL,
  `s` date NOT NULL,
  `e` date NOT NULL,
  `y` int(11) DEFAULT NULL,
  PERIOD FOR `p` (`s`, `e`),
  PRIMARY KEY (`id`,`p` WITHOUT OVERLAPS)
) ENGINE=DEFAULT_ENGINE DEFAULT CHARSET=latin1
alter table t drop y;
create or replace table t1 like t;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int(11) NOT NULL,
  `s` date NOT NULL,
  `e` date NOT NULL,
  PERIOD FOR `p` (`s`, `e`),
  PRIMARY KEY (`id`,`p` WITHOUT OVERLAPS)
) ENGINE=DEFAULT_ENGINE DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
create or replace table t1 (x int, s date, e date,
period for p(s,e),
primary key(x, p without overlaps));
alter table t1 partition by key (x);
create or replace table t1 (x int, s date, e date, period for p (s, e))
partition by hash (x);
alter table t1 add primary key (x, p without overlaps);
create or replace table t2 (x int, s date, e date,
period for p (s, e),
key(x, p without overlaps));
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'without overlaps))' at line 3
create or replace table t2 (x int, s date, e date,
period for p (s, e),
unique(x, p without overlaps, x, p without overlaps));
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' x, p without overlaps))' at line 3
create or replace table t1 (x varchar(100), s date, e date,
period for p(s,e),
primary key(x, p without overlaps));
create or replace table t1 (x varchar(100) compressed, s date, e date,
period for p(s,e),
primary key(x, p without overlaps));
ERROR HY000: Compressed column 'x' can't be used in key specification
create or replace table t (x int, s date, e date, period for apptime(s,e),
unique(x, apptime without overlaps) using hash);
ERROR HY000: Key `x` cannot have WITHOUT OVERLAPS
create or replace table t (x int, s date, e date, period for apptime(s,e),
b blob, unique(x, b, apptime without overlaps));
ERROR HY000: Key `x` cannot have WITHOUT OVERLAPS
create or replace table t (x int, s date, e date, b blob unique,
period for apptime(s,e),
unique(x, apptime without overlaps));
insert into t values (1, '2020-03-01', '2020-03-05', 'test');
insert into t values (1, '2020-03-05', '2020-03-10', 'test');
ERROR 23000: Duplicate entry 'test' for key 'b'
insert into t values (1, '2020-03-05', '2020-03-10', 'test2');
insert into t values (1, '2020-03-03', '2020-03-10', 'test3');
ERROR 23000: Duplicate entry '1-2020-03-10-2020-03-03' for key 'x'
create or replace table t(id int, s date, e date, val int,
period for p(s,e),
unique(id, p without overlaps));
insert into t values (1, '2003-01-01', '2003-03-01', 1),
(1, '2003-05-01', '2003-07-01', 2);
# This just inserts a row; no rows matched
insert into t values (2, '2003-01-01', '2003-04-01', 3)
on duplicate key update val=4;
select * from t;
id	s	e	val
1	2003-01-01	2003-03-01	1
1	2003-05-01	2003-07-01	2
2	2003-01-01	2003-04-01	3
insert into t values (1, '2003-01-05', '2003-04-01', 5)
on duplicate key update val=6;
select row_count();
row_count()
2
select * from t;
id	s	e	val
1	2003-01-05	2003-03-01	6
1	2003-05-01	2003-07-01	2
2	2003-01-01	2003-04-01	3
insert into t values (1, '2003-01-01', '2003-06-01', 7)
on duplicate key update val=8;
select row_count();
row_count()
4
select * from t;
id	s	e	val
1	2003-01-05	2003-03-01	8
1	2003-05-01	2003-06-01	8
2	2003-01-01	2003-04-01	3
# No rows matched
insert into t values (1, '2003-07-01', '2003-08-01', 9)
on duplicate key update val=10;
select row_count();
row_count()
1
select * from t;
id	s	e	val
1	2003-01-05	2003-03-01	8
1	2003-05-01	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-04-01	3
replace into t values (1, '2003-02-01', '2003-05-05', 11);
select row_count();
row_count()
5
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-04-01	3
# Single row insert
replace into t values(2, '2003-06-01', '2003-08-01', 12);
select row_count();
row_count()
1
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-04-01	3
2	2003-06-01	2003-08-01	12
replace into t values(2, '2003-02-01', '2003-09-01', 13);
select row_count();
row_count()
4
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-02-01	3
2	2003-02-01	2003-09-01	13
delete from t where val=13;
insert into t values(2, '2003-06-01', '2003-08-01', 14);
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-02-01	3
2	2003-06-01	2003-08-01	14
replace into t values(2, '2003-02-01', '2003-07-01', 15);
select row_count();
row_count()
3
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-02-01	3
2	2003-02-01	2003-07-01	15
2	2003-07-01	2003-08-01	14
select 2, '2003-01-15', '2003-07-15', 16 into outfile 'tmp_t.txt';
load data infile 'tmp_t.txt' into table t;
ERROR 23000: Duplicate entry '2-2003-07-15-2003-01-15' for key 'id'
load data infile 'tmp_t.txt' replace into table t;
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-01-15	3
2	2003-01-15	2003-07-15	16
2	2003-07-15	2003-08-01	14
insert t select 2, '2003-01-07', '2003-09-01', 17
on duplicate key update val = 18;
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-07	2003-01-15	18
2	2003-01-15	2003-07-15	18
2	2003-07-15	2003-08-01	18
replace t select 2, '2003-01-07', '2003-09-01', 19;
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-07	2003-09-01	19
# Double execution
replace t values (2, '2003-01-01', '2003-01-10', 20),
(2, '2003-05-01', '2003-08-01', 20);
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-01	2003-01-10	20
2	2003-01-10	2003-05-01	19
2	2003-05-01	2003-08-01	20
2	2003-08-01	2003-09-01	19
prepare stmt from "insert t values (2, '2003-01-05', '2003-07-10', 21) on duplicate key update val= val+1";
execute stmt;
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-05	2003-01-10	22
2	2003-01-10	2003-05-01	20
2	2003-05-01	2003-07-10	21
2	2003-08-01	2003-09-01	19
execute stmt;
select * from t;
id	s	e	val
1	2003-01-05	2003-02-01	8
1	2003-02-01	2003-05-05	11
1	2003-05-05	2003-06-01	8
1	2003-07-01	2003-08-01	9
2	2003-01-05	2003-01-10	23
2	2003-01-10	2003-05-01	21
2	2003-05-01	2003-07-10	22
2	2003-08-01	2003-09-01	19
deallocate prepare stmt;
# auto_increment
alter table t add pk int primary key auto_increment;
replace t(id, s, e, val) values (2, '2003-06-01', '2003-08-15', 23);
select * from t;
id	s	e	val	pk
1	2003-01-05	2003-02-01	8	1
1	2003-02-01	2003-05-05	11	5
1	2003-05-05	2003-06-01	8	2
1	2003-07-01	2003-08-01	9	4
2	2003-01-05	2003-01-10	23	7
2	2003-01-10	2003-05-01	21	6
2	2003-05-01	2003-06-01	22	9
2	2003-06-01	2003-08-15	23	11
2	2003-08-15	2003-09-01	19	10
insert t(id, s, e, val) values (2, '2003-05-15', '2003-08-20', 24)
on duplicate key update val = 25;
select * from t;
id	s	e	val	pk
1	2003-01-05	2003-02-01	8	1
1	2003-02-01	2003-05-05	11	5
1	2003-05-05	2003-06-01	8	2
1	2003-07-01	2003-08-01	9	4
2	2003-01-05	2003-01-10	23	7
2	2003-01-10	2003-05-01	21	6
2	2003-05-15	2003-06-01	25	9
2	2003-06-01	2003-08-15	25	11
2	2003-08-15	2003-08-20	25	10
create or replace database test;
