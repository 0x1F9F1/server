--- /home/kevg/work/m/bb-10.2-MDEV-20194-CHECK-row-size/mysql-test/suite/innodb_zip/r/page_size.result	2019-09-15 19:33:42.676109532 +0300
+++ /home/kevg/work/m/bb-10.2-MDEV-20194-CHECK-row-size/mysql-test/suite/innodb_zip/r/page_size.reject	2019-09-15 19:40:40.306732147 +0300
@@ -3,7 +3,7 @@
 SELECT variable_value FROM information_schema.global_status
 WHERE LOWER(variable_name) = 'innodb_page_size';
 variable_value
-8192
+4096
 # Test 3) Query some information_shema tables that are dependent upon
 #         the page size.
 SELECT	t.name table_name, t.n_cols, t.flag table_flags,
@@ -32,13 +32,13 @@
 table_name	n_cols	table_flags	index_name	root_page	type	n_fields	merge_threshold
 test/t1	5	0	PRIMARY	3	3	1	50
 test/t2	5	1	PRIMARY	3	3	1	50
-test/t3	5	39	PRIMARY	3	3	1	50
+test/t3	5	37	PRIMARY	3	3	1	50
 test/t4	5	33	PRIMARY	3	3	1	50
 === information_schema.innodb_sys_tablespaces and innodb_sys_datafiles ===
 Space_Name	Space_Type	Page_Size	Zip_Size	Formats_Permitted	Path
 test/t1	Single	DEFAULT	DEFAULT	Compact or Redundant	MYSQLD_DATADIR/test/t1.ibd
 test/t2	Single	DEFAULT	DEFAULT	Compact or Redundant	MYSQLD_DATADIR/test/t2.ibd
-test/t3	Single	DEFAULT	4096	Compressed	MYSQLD_DATADIR/test/t3.ibd
+test/t3	Single	DEFAULT	2048	Compressed	MYSQLD_DATADIR/test/t3.ibd
 test/t4	Single	DEFAULT	DEFAULT	Dynamic	MYSQLD_DATADIR/test/t4.ibd
 DROP TABLE t1, t2, t3, t4;
 # Test 4) The maximum row size is dependent upon the page size.
@@ -47,63 +47,60 @@
 SET SESSION innodb_strict_mode = ON;
 CREATE TABLE t1 (
 c01 char(200), c02 char(200), c03 char(200), c04 char(200), c05 char(200),
-c06 char(200), c07 char(200), c08 char(200), c09 char(200), c10 char(200),
-c11 char(200), c12 char(200), c13 char(200), c14 char(200), c15 char(200),
-c16 char(200), c17 char(200), c18 char(200), c19 char(200), c20 char(103)
+c06 char(200), c07 char(200), c08 char(200), c09 char(200), c10 char(76)
 ) ROW_FORMAT=compressed;
 DROP TABLE t1;
 CREATE TABLE t1 (
 c01 char(200), c02 char(200), c03 char(200), c04 char(200), c05 char(200),
-c06 char(200), c07 char(200), c08 char(200), c09 char(200), c10 char(200),
-c11 char(200), c12 char(200), c13 char(200), c14 char(200), c15 char(200),
-c16 char(200), c17 char(200), c18 char(200), c19 char(200), c20 char(110)
+c06 char(200), c07 char(200), c08 char(200), c09 char(200), c10 char(85)
 ) ROW_FORMAT=compressed;
-ERROR 42000: Row size is greater than 3930. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
-CREATE TABLE t1 (a varchar(128) character set utf8,
-b varchar(128) character set utf8,
-c varchar(128) character set utf8,
-d varchar(128) character set utf8,
+ERROR 42000: Row size is greater than 1902. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
+CREATE TABLE t1 (a varchar(98) character set utf8,
+b varchar(98) character set utf8,
+c varchar(98) character set utf8,
+d varchar(97) character set utf8,
 PRIMARY KEY (a,b,c,d))
 ENGINE=innodb;
 DROP TABLE t1;
-CREATE TABLE t1 (a varchar(128) character set utf8,
-b varchar(128) character set utf8,
-c varchar(128) character set utf8,
-d varchar(129) character set utf8,
+CREATE TABLE t1 (a varchar(98) character set utf8,
+b varchar(98) character set utf8,
+c varchar(98) character set utf8,
+d varchar(98) character set utf8,
 PRIMARY KEY (a,b,c,d))
 ENGINE=innodb;
-ERROR 42000: Specified key was too long; max key length is 1536 bytes
-CREATE TABLE t1 (a varchar(128) character set utf8,
-b varchar(128) character set utf8,
-c varchar(128) character set utf8,
-d varchar(128) character set utf8,
-e varchar(128) character set utf8,
+ERROR 42000: Specified key was too long; max key length is 1173 bytes
+CREATE TABLE t1 (a varchar(98) character set utf8,
+b varchar(98) character set utf8,
+c varchar(98) character set utf8,
+d varchar(98) character set utf8,
+e varchar(97) character set utf8,
 PRIMARY KEY (a), KEY (b,c,d,e))
 ENGINE=innodb;
 DROP TABLE t1;
-CREATE TABLE t1 (a varchar(128) character set utf8,
-b varchar(128) character set utf8,
-c varchar(128) character set utf8,
-d varchar(128) character set utf8,
-e varchar(129) character set utf8,
+CREATE TABLE t1 (a varchar(98) character set utf8,
+b varchar(98) character set utf8,
+c varchar(98) character set utf8,
+d varchar(98) character set utf8,
+e varchar(98) character set utf8,
 PRIMARY KEY (a), KEY (b,c,d,e))
 ENGINE=innodb;
-ERROR 42000: Specified key was too long; max key length is 1536 bytes
+ERROR 42000: Specified key was too long; max key length is 1173 bytes
 # Test 5) KEY_BLOCK_SIZE validation
-CREATE TABLE t1 ( i INT ) ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=16;
+CREATE TABLE t1 (i int) ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=16;
 ERROR HY000: Can't create table `test`.`t1` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
-Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 8.
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 4.
 Error	1005	Can't create table `test`.`t1` (errno: 140 "Wrong create options")
 Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
 CREATE TABLE t1 ( i INT ) ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;
+ERROR HY000: Can't create table `test`.`t1` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
-SELECT table_name, row_format, create_options
-FROM information_schema.tables WHERE table_name = 't1';
-table_name	row_format	create_options
-t1	Compressed	row_format=COMPRESSED key_block_size=8
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=8 cannot be larger than 4.
+Error	1005	Can't create table `test`.`t1` (errno: 140 "Wrong create options")
+Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
+CREATE TABLE t1 ( i INT ) ROW_FORMAT=COMPRESSED;
 ALTER TABLE t1 KEY_BLOCK_SIZE=4;
 SHOW WARNINGS;
 Level	Code	Message
@@ -145,8 +142,11 @@
 table_name	row_format	create_options
 t1	Compressed	row_format=COMPRESSED key_block_size=16
 ALTER TABLE t1 KEY_BLOCK_SIZE=8;
+Warnings:
+Warning	1478	InnoDB: ignoring KEY_BLOCK_SIZE=8.
 SHOW WARNINGS;
 Level	Code	Message
+Warning	1478	InnoDB: ignoring KEY_BLOCK_SIZE=8.
 SELECT table_name, row_format, create_options
 FROM information_schema.tables WHERE table_name = 't1';
 table_name	row_format	create_options
@@ -190,6 +190,7 @@
 ERROR HY000: Can't create table `test`.`t4` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=8 cannot be larger than 4.
 Warning	1478	InnoDB: KEY_BLOCK_SIZE requires innodb_file_per_table.
 Error	1005	Can't create table `test`.`t4` (errno: 140 "Wrong create options")
 Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
@@ -197,7 +198,7 @@
 ERROR HY000: Can't create table `test`.`t5` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
-Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 8.
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 4.
 Warning	1478	InnoDB: KEY_BLOCK_SIZE requires innodb_file_per_table.
 Error	1005	Can't create table `test`.`t5` (errno: 140 "Wrong create options")
 Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
@@ -209,6 +210,7 @@
 ERROR HY000: Can't create table `test`.`t4` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=8 cannot be larger than 4.
 Warning	1478	InnoDB: KEY_BLOCK_SIZE requires innodb_file_format > Antelope.
 Error	1005	Can't create table `test`.`t4` (errno: 140 "Wrong create options")
 Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
@@ -216,7 +218,7 @@
 ERROR HY000: Can't create table `test`.`t5` (errno: 140 "Wrong create options")
 SHOW WARNINGS;
 Level	Code	Message
-Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 8.
+Warning	1478	InnoDB: KEY_BLOCK_SIZE=16 cannot be larger than 4.
 Warning	1478	InnoDB: KEY_BLOCK_SIZE requires innodb_file_format > Antelope.
 Error	1005	Can't create table `test`.`t5` (errno: 140 "Wrong create options")
 Warning	1030	Got error 140 "Wrong create options" from storage engine InnoDB
@@ -256,8 +258,10 @@
 UPDATE t1 SET t=@e;
 ROLLBACK;
 CREATE INDEX t1u ON t1 (u(767));
-CREATE INDEX t1ut ON t1 (u(767), t(767));
-CREATE INDEX t1st ON t1 (s(767), t(767));
+CREATE INDEX t1ut ON t1 (u(767));
+Warnings:
+Note	1831	Duplicate index `t1ut`. This is deprecated and will be disallowed in a future release
+CREATE INDEX t1st ON t1 (s(767));
 SHOW CREATE TABLE t1;
 Table	Create Table
 t1	CREATE TABLE `t1` (
@@ -287,8 +291,8 @@
   KEY `t1g` (`g`(767)),
   KEY `t1t` (`t`(767)),
   KEY `t1u` (`u`(767)),
-  KEY `t1ut` (`u`(767),`t`(767)),
-  KEY `t1st` (`s`(767),`t`(767))
+  KEY `t1ut` (`u`(767)),
+  KEY `t1st` (`s`(767))
 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC
 DROP TABLE t1;
 # Bug#12547647 UPDATE LOGGING COULD EXCEED LOG PAGE SIZE
@@ -350,6 +354,8 @@
 KEY pk(sk01,sk02,sk03,sk04,sk05,sk06,sk07,sk08,
 sk09,sk10,sk11,sk12,sk13,sk14,sk15,sk16))
 ROW_FORMAT=Compressed KEY_BLOCK_SIZE=4 ENGINE=InnoDB;
+Warnings:
+Warning	139	Row size is greater than 1981. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
 SET @r = repeat('a', 48);
 INSERT INTO t1 VALUES(@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,
 @r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r,@r);
@@ -369,21 +375,19 @@
 DROP TABLE t1;
 CREATE TABLE t1(
 c text NOT NULL, d text NOT NULL,
-PRIMARY KEY (c(767),d(767)))
+PRIMARY KEY (c(767)))
 ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=1 CHARSET=ASCII;
 Warnings:
-Warning	139	Row size is greater than 892. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
+Warning	139	Row size is greater than 894. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
 DROP TABLE t1;
 CREATE TABLE t1(
 c text NOT NULL, d text NOT NULL,
-PRIMARY KEY (c(767),d(767)))
+PRIMARY KEY (c(767)))
 ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=2 CHARSET=ASCII;
-Warnings:
-Warning	139	Row size is greater than 1916. Changing some columns to TEXT or BLOB may help. In current row format, BLOB prefix of 0 bytes is stored inline.
 DROP TABLE t1;
 CREATE TABLE t1(
 c text NOT NULL, d text NOT NULL,
-PRIMARY KEY (c(767),d(767)))
+PRIMARY KEY (c(767)))
 ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=4 CHARSET=ASCII;
 DROP TABLE t1;
 CREATE TABLE t1(c text, PRIMARY KEY (c(440)))
