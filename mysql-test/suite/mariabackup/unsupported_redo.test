--source include/have_innodb.inc
call mtr.add_suppression("InnoDB: New log files created");
call mtr.add_suppression("InnoDB: Operating system error number .* in a file operation");
call mtr.add_suppression("InnoDB: The error means the system cannot find the path specified");
call mtr.add_suppression("InnoDB: If you are installing InnoDB, remember that you must create directories yourself, InnoDB does not create them");
call mtr.add_suppression("InnoDB: Ignoring tablespace for `test`\\.`t21` because it could not be opened");
call mtr.add_suppression("InnoDB: Cannot open datafile for read-only: ");
call mtr.add_suppression("Table .* in the InnoDB data dictionary has tablespace id .*, but tablespace with that id or name does not exist");

let $basedir=$MYSQLTEST_VARDIR/tmp/backup;
let $incremental_dir=$MYSQLTEST_VARDIR/tmp/backup_inc1;

CREATE TABLE t1(i INT PRIMARY KEY auto_increment, a int) ENGINE INNODB;
alter table t1 FORCE, algorithm=inplace;

# Below mariabackup operation may complete successfully if checkpoint happens
# after the alter table command.

echo # Fails during full backup;
--disable_result_log
--error 1
exec $XTRABACKUP --defaults-file=$MYSQLTEST_VARDIR/my.cnf  --backup --target-dir=$basedir;
--enable_result_log

DROP TABLE t1;
rmdir $basedir;

CREATE TABLE t1(i INT PRIMARY KEY auto_increment, a int) ENGINE INNODB;

INSERT INTO t1(a) select 1 union select 2 union select 3;

--echo # Create full backup , modify table, then fails during creation of
--echo #		incremental/differential backup
--disable_result_log
exec $XTRABACKUP --defaults-file=$MYSQLTEST_VARDIR/my.cnf  --backup --target-dir=$basedir;
--enable_result_log

alter table t1 force, algorithm=inplace;

--disable_result_log
--error 1
exec $XTRABACKUP --defaults-file=$MYSQLTEST_VARDIR/my.cnf  --backup --target-dir=$incremental_dir --incremental-basedir=$basedir;
--enable_result_log

drop table t1;
rmdir $basedir;
rmdir $incremental_dir;

CREATE TABLE t1(i INT) ENGINE INNODB;
INSERT INTO t1 VALUES(1);
CREATE TABLE t21(i INT) ENGINE INNODB;
INSERT INTO t21 VALUES(1);

let $MYSQLD_DATADIR= `select @@datadir`;
let $targetdir=$MYSQLTEST_VARDIR/tmp/bk;
let old_datadir=$MYSQLTEST_VARDIR/tmp/old_data;
--mkdir $old_datadir

CREATE TABLE t2(i int) ENGINE INNODB;
ALTER TABLE t21 FORCE, ALGORITHM=INPLACE;

--echo # Create partial backup (excluding table t21), Ignore the
--echo # unsupported redo log for the table t21.

--disable_result_log
exec $XTRABACKUP --defaults-file=$MYSQLTEST_VARDIR/my.cnf  --backup "--tables-exclude=test.t21" --target-dir=$targetdir;
--enable_result_log
--list_files $targetdir/test

--echo # After partial restore operation, t21 files will be missing but t21
--echo # table information will be present in dictionary. It will
--echo # restrict creating the table t21 in the future test. To avoid
--echo # that, take the copy of t21 files and drop the table later.
--copy_file $MYSQLD_DATADIR/test/t21.frm $old_datadir/t21.frm

--echo # Prepare the full backup
--disable_result_log
exec $XTRABACKUP --prepare --target-dir=$targetdir;
--source include/restart_and_restore.inc
--enable_result_log

SHOW TABLES;

DROP TABLE t1;
DROP TABLE t2;

--echo # Move the t21 files into data directory
--copy_file $old_datadir/t21.frm $MYSQLD_DATADIR/test/t21.frm

DROP TABLE t21;
rmdir $targetdir;
rmdir $old_datadir;
